<?xml version="1.0" encoding="UTF-8"?><!-- Generated by Sonar -->
<profile>
  <name>rules</name>
  <language>java</language>
  <rules>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>IndentationCheck</key>
      <priority>INFO</priority>
      <parameters>
        <parameter>
          <key>indentationLevel</key>
          <value>4</value>
        </parameter>
      </parameters>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>UselessParenthesesCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1215</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S138</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S135</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1150</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1151</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1210</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1214</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>NoSonar</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>ObjectFinalizeCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1158</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1157</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1155</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1153</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>UndocumentedApi</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>TrailingCommentCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>MaximumInheritanceDepth</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>EmptyFile</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S128</key>
      <priority>INFO</priority>
    </rule>
    <!-- Deactivate bytecodeVisitor Rules -->
    <!--rule>
      <repositoryKey>squid</repositoryKey>
      <key>UnusedPrivateMethod</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>CallToDeprecatedMethod</key>
      <priority>INFO</priority>
    </rule-->
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>AssignmentInSubExpressionCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1221</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1160</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1220</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00101</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00100</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>StringEqualityComparisonCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1168</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>HiddenFieldCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1163</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1166</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1165</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>ArchitecturalConstraint</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S134</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1170</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1171</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1175</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1174</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>RedundantThrowsDeclarationCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>CallToFileDeleteOnExitMethod</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>LabelsShouldNotBeUsedCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>ForLoopCounterChangedCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>SwitchLastCaseIsDefaultCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>RightCurlyBraceDifferentLineAsNextBlockCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1201</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>MaximumLackOfCohesionOfMethods</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>ModifiersOrderCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>ClassCyclomaticComplexity</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1181</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1182</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1186</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1185</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1188</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>UselessImportCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>MissingDeprecatedCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>XPath</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>ObjectFinalizeOverridenCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>LowerCaseLongSuffixCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1118</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>UnusedProtectedMethod</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>CommentedOutCodeLine</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>ParsingError</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1125</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1126</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>ClassVariableVisibilityCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>RightCurlyBraceSameLineAsNextBlockCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00112</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1066</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1067</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>EmptyStatementUsageCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>MethodCyclomaticComplexity</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00107</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1132</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1133</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00108</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00103</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00105</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1134</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00104</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1135</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00122</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1197</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00120</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1199</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00121</key>
      <priority>INFO</priority>
    </rule>
    <!-- Deactivate bytecodeVisitor Rules -->
    <!--rule>
      <repositoryKey>squid</repositoryKey>
      <key>CycleBetweenPackages</key>
      <priority>INFO</priority>
    </rule-->
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1149</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>LeftCurlyBraceEndLineCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>RightCurlyBraceStartLineCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1141</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00119</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1142</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00118</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1143</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1191</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00117</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1190</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00116</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1145</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1193</key>
      <priority>INFO</priority>
    </rule>
    <!-- Do not test this rule which generates over 170'000 issues for performance reasons
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>LeftCurlyBraceStartLineCheck</key>
      <priority>INFO</priority>
    </rule>
    -->
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00115</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1192</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00114</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1147</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S106</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1195</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>ObjectFinalizeOverridenCallsSuperFinalizeCheck</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S00113</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1148</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1194</key>
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1206</key> <!-- Override both equals() and hasCode() -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1219</key> <!-- non-case label in switch -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1301</key> <!-- switch should have at least 3 cases -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1200</key> <!-- class depends on too many other classes -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1314</key> <!-- octal values should not be used -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1310</key> <!-- NOPMD comment tags -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1315</key> <!-- CHECKSTYLE:ON + CHECKSTYLE:OFF comment tags -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1226</key> <!-- Assign to parameters -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1313</key> <!-- Hardcoded IPs -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1312</key> <!-- Logger declarations -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1318</key> <!-- Object.equals(null) -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1223</key> <!-- Method name same as class -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1213</key> <!-- Incorrect order of members -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1319</key> <!-- Collection implementations -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1444</key> <!-- Public static field should be final -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1452</key> <!-- Wildcard in return type-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1481</key> <!-- Unused local variables -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1068</key> <!-- Unused private fields -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1454</key> <!-- Too many unary operators -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1317</key> <!-- StringBuffer or StringBuilder instantiated with char -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S881</key> <!-- Increment and decrement operators should not be mixed with others -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1451</key> <!-- File header -->
      <priority>INFO</priority>
      <parameters>
        <parameter>
          <key>headerFormat</key>
          <value>
          <![CDATA[
/*
 * Copyright (c) 1998, 2006, Oracle and/or its affiliates. All rights reserved.
 * ORACLE PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.]]></value>
        </parameter>
      </parameters>
    </rule>
     <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1596</key> <!-- Empty Set and Collections -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1488</key> <!-- Variables should not be declared and immediatly returned or thrown -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1602</key> <!--Lambdas with one statement should not use blocks -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1611</key> <!-- optional parentheses in lambdas should be removed -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1604</key> <!-- Anonymous classes with one method should be lambdas -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1610</key> <!-- Abstract classes with no field should be interfaces -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1609</key> <!-- Single Abstract Method interface should be annotated with @FunctionalInterface -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1696</key> <!-- Avoid catching NPE-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1700</key> <!-- Field should not have same name as enclosing class-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1694</key> <!-- Abstract class without abstract method-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1172</key> <!-- Unused method parameters-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1701</key> <!-- Field matching method names-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S109</key> <!--magic numbers -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1643</key> <!--Concatenation with + in loops -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1698</key> <!--compare objects with equals -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1294</key> <!--Array.equals should not be used-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1710</key> <!--Repeated annotation should not be wrapped-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1695</key> <!--Avoid throwing NPE-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1697</key> <!--Avoid throwing NPE-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1862</key> <!--DuplicateConditionIfElseIfCheck-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1656</key> <!--Self assignement variable-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1598</key> <!--Mismatch package name-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1612</key> <!--Replace lambdas by method references-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1873</key> <!--static final array not private-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2039</key> <!--Member Variable visibility should be specified-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1948</key> <!--Serializable Fields in serializable classes-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1228</key> <!--Missing package-info.java-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1479</key> <!--Number of cases in switch statement-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1871</key> <!--Identical case implementation-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1764</key> <!--Identical operand on binary expression -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1244</key> <!--Float (in)equality -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2077</key> <!--SQL injection -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1774</key> <!--Ternary operator-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1161</key> <!--@Override annotation-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1994</key> <!--For loop variables -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2094</key> <!--Empty class -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1850</key> <!--InstanceOf always true -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1905</key> <!--redundant casts -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1724</key> <!--extending obsolete class and interfaces -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2114</key> <!--collection instance calling itself -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1065</key> <!--Unused label -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1162</key> <!--do not throw checked exception -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2184</key> <!--cast arithmetic operands -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2201</key> <!--ignored return values -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2225</key> <!-- toString returning null -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2230</key> <!-- Transactional method visibility -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2200</key> <!-- compareTo result test -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2092</key> <!-- Secure Cookies -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1848</key> <!-- useless object creation -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2235</key> <!-- catch IllegalMonitorStateException -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S888</key> <!-- for loop termination condition -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2089</key> <!-- Http referers -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2068</key> <!-- Hard coded credentials -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2245</key> <!-- pseudo random numbers -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2096</key> <!-- main methods should not throw exceptions -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2232</key> <!-- ResulSet.isLast()  -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1849</key> <!-- Iterator hasNext() calling next()  -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2232</key> <!-- call wait() on Thread  -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1844</key> <!-- call wait() on type inheriting from Condition-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2251</key> <!-- for loop increment sign -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2252</key> <!-- for loop false condition -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2070</key> <!-- Deprecated hash algorithm -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2258</key> <!-- Null Cipher -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2254</key> <!-- getRequestedSessionId invocation detection-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2226</key> <!-- servlet instance field -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2250</key> <!-- ConcurrentLinkedQueue size() method-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2111</key> <!-- Do not use BigDecimal double constructor-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2109</key> <!-- Reflexion on annotation with wrong retention policy-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2273</key> <!-- wait notify and notifyAll in synchronized blocks-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2276</key> <!-- Thread.sleep in synchronized blocks-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2274</key> <!-- wait calls should be in while loop-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2272</key> <!-- Iterator.next() methods should throw NoSuchElementException -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2278</key> <!-- DES and DESede should not be used-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2277</key> <!--RSA should use OAE padding-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1699</key> <!-- Constructors should only call final methods -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2204</key> <!-- ".equals()" should not be used to test the values of "Atomic" classes -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2078</key> <!-- LDAP Injection -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2178</key> <!-- Short-circuit logic should be used in boolean contexts -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2076</key> <!-- OS command Injection -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2116</key> <!-- "hashCode" and "toString" should not be called on array instances -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1943</key> <!-- Classes and methods that rely on the default system encoding should not be used -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2157</key> <!-- "Cloneables" should implement "clone" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2275</key> <!-- printf runtime errors -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2197</key> <!-- Modulus results should not be checked for direct equality -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2151</key> <!--runFinalizersOnExit check -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2127</key> <!--Forbid call to Double.longBitsToDouble with other things than long -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1860</key> <!-- Synchronisation should not be based on Strings or boxed primitives -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2055</key> <!-- The non-serializable super class of a "Serializable" class must have a no-argument constructor -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2118</key> <!-- Non-serializable classes should not be written -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2066</key> <!-- "Serializable" inner classes of non-serializable classes should be "static" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2059</key> <!-- "Serializable" inner classes of "Serializable" classes should be static -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2057</key> <!-- "Serializable" classes should have a version id -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2063</key> <!-- Comparators should be "Serializable" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2065</key> <!-- Fields in non-serializable classes should not be "transient" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2061</key> <!-- Custom serialization method signatures should meet requirements -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2176</key> <!-- Class names should not shadow interfaces or superclasses -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2333</key> <!-- Redundant modifiers should not be used -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2164</key> <!-- Math should not be performed on floats -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2130</key> <!-- Parsing should be used to convert "Strings" to primitives -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2166</key> <!-- Classes named like "Exception" should extend "Exception" or a subclass -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2156</key> <!-- "final" classes should not have "protected" members -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1309</key> <!-- SuppressWarnings annotation should not be used -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2153</key> <!-- Boxing and unboxing should not be immediately reversed -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2257</key> <!-- Only standard cryptographic algorithms should be used -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2326</key> <!-- Unused type parameters -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2386</key> <!-- Interfaces should not have "public static" mutable fields -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2183</key> <!-- Ints and longs should not be shifted by more than their number of bits-1 -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2167</key> <!-- "compareTo" should not return "Integer.MIN_VALUE" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2165</key> <!-- "finalize" should not set fields to "null" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2446</key> <!-- notify should not be called, notifyAll should be used instead -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2122</key> <!-- ScheduledThreadPoolExecutor core pool size -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2134</key> <!-- class extending Thread does not overrides run -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2175</key> <!-- Inappropriate "Collection" calls should not be made -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2447</key> <!-- Null should not be returned from a "Boolean" method -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2131</key> <!-- Primitives should not be boxed just for "String" conversion -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2437</key> <!-- Silly bit operations should not be performed -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2110</key> <!-- Invalid value for date methods-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2110</key> <!-- Invalid value for date methods-->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2160</key> <!-- Subclasses that add fields should override "equals" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1872</key> <!-- Class should not be compared by name -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2440</key> <!-- Classes with only "static" methods should not be instantiated -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2441</key> <!-- NonSerializable objects should not be stored in HttpSession -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2444</key> <!-- Lazy static field initialization -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2123</key> <!-- Useless increments -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2133</key> <!-- Objects should not be created only to "getClass" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2154</key> <!-- Dissimilar primitive wrappers should not be used with the ternary operator without explicit casting -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2442</key> <!-- "Lock" objects should not be "synchronized" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2162</key> <!-- Symmetric equals  -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2388</key> <!-- call to super class method from inner classes  -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2301</key> <!-- Public methods should not contain selector arguments -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2438</key> <!-- "Threads" should not be used where "Runnables" are expected -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2445</key> <!-- Blocks synchronized on fields should not contain assignments new objects to those fields -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2259</key> <!-- Null pointers should not be dereferenced -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2583</key> <!-- Conditions should not unconditionally evaluate to "TRUE" or to "FALSE" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2696</key> <!-- Instance methods should not write to "static" fields -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2674</key> <!-- The value returned from a stream read should be checked -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2718</key> <!-- "DateUtils.truncate" from Apache Commons Lang library should not be used -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2695</key> <!-- "PreparedStatement" and "ResultSet" methods should be called with valid indices -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2112</key> <!-- "URL.hashCode" and "URL.equals" should be avoided -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2095</key> <!-- Resource should be closed -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2387</key> <!-- Child class members should not shadow parent class members -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2677</key> <!-- "read" and "readLine" and return values should be used -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2786</key> <!-- Nested "enum"s should not be declared static -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S864</key> <!-- Limited dependence should be placed on operator precedence rules in expressions -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1858</key> <!-- "toString()" should never be called on a String object -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2693</key> <!-- Threads should not be started in constructors -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2864</key> <!-- "entrySet()" should be iterated when both the key and value are needed -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2692</key> <!-- "indexOf" checks should not be for positive numbers -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2675</key> <!-- "readObject" should not be "synchronized"S864 -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2676</key> <!-- "Math.abs" and negation should not be used on numbers that could be "MIN_VALUE" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2885</key> <!-- "Calendars" and "DateFormats" should not be static -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2222</key> <!-- Locks should be unlocked -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2097</key> <!-- "equals(Object obj)" should test argument type -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2185</key> <!-- Silly math should not be performed -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2159</key> <!-- Silly equality checks should not be made -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2699</key> <!-- Tests should include assertions -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2912</key> <!-- "indexOf" checks should use a start position -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2391</key> <!-- JUnit framework methods should be declared properly -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2384</key> <!-- Mutable members should not be stored or returned directly -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2209</key> <!-- "static" members should be accessed statically -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2970</key> <!-- Assertions should be complete -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2325</key> <!-- "private" methods that don't access instance data should be "static" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1264</key> <!-- A "while" loop should be used instead of a "for" loop -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2681</key> <!-- Multiline blocks should be enclosed in curly braces -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1640</key> <!-- Maps with keys that are enum values should be replaced with EnumMap -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2976</key> <!-- "File.createTempFile" should not be used to create a directory -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1940</key> <!-- Boolean checks should not be inverted -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2694</key> <!-- Inner classes which do not reference their owning classes should be "static" -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2208</key> <!-- Wildcard imports should not be used -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S2974</key> <!-- class with only private constructors should be final -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S3008</key> <!-- static non final field name naming convention -->
      <priority>INFO</priority>
    </rule>
    <rule>
      <repositoryKey>squid</repositoryKey>
      <key>S1659</key> <!-- Multiple variables should not be declared on the same line-->
      <priority>INFO</priority>
    </rule>
  </rules>
</profile>
