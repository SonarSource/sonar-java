<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>SonarJava Viewer</title>
    <link rel="shortcut icon" type="image/x-icon" href="/favicon.ico">
    <link rel="apple-touch-icon-precomposed" href="/favicon-152.png">

    <link rel="stylesheet" type="text/css" href="lib/bootstrap-3.3.7/css/bootstrap.min.css">
    <script src="lib/jquery-3.2.1/jquery.min.js"></script>
    <script src="lib/bootstrap-3.3.7/js/bootstrap.min.js"></script>

    <link rel="stylesheet" type="text/css" href="lib/codemirror-5.27.2/codemirror.min.css">
    <script src="lib/codemirror-5.27.2/codemirror.min.js"></script>
    <script src="lib/codemirror-5.27.2/mode/clike/clike.min.js"></script>
    <script src="lib/codemirror-5.27.2/addon/selection/active-line.min.js"></script>

    <link rel="stylesheet" type="text/css" href="lib/viewer/style.css">
    <script src="lib/viewer/viewer.js"></script>

    <script src="lib/vis-4.20.0/vis.min.js"></script>
  </head>
</head>
<body>
  <div class="container-fluid">
    <div class="col-md-3">
      <div class="row">
        <h1>Graphs</h1>
        <ul class="nav nav-pills">
          <li role="presentation" class="active"><a  href="#eg" data-toggle="tab" class="btn btn-default">Exploded Graph</a></li>
          <li role="presentation"><a href="#cfg" data-toggle="tab" class="btn btn-default">Control Flow Graph</a></li>
          <li role="presentation"><a href="#ast" data-toggle="tab" class="btn btn-default">Syntax Tree</a></li>
        </ul>
      </div>
      <div class="row">
        <h1>Java sample</h1>
        <form action="/" method="post">
          <div class="codeWrapper">
            <textarea id="java-code" name="javaCode">$javaCode</textarea>
          </div>
          <div>
            <button type="submit" class="btn btn-primary"><span class="glyphicon glyphicon-cog"></span>   Generate</button>
            <a href="/" class="btn btn-default" role="button"><span class="glyphicon glyphicon-repeat"></span>   Reset</a>
          </div>
        </form>
        <h1>Control Flow Graph</h1>
        <div class="codeWrapper">
          <textarea id="cfg-code">$cfg</textarea>
        </div>
      </div>
    </div>
    <div class="col-md-9">
      <div class="panel panel-danger" id="errorBox">
        <div class="panel-heading">
          <h3 class=panel-title>$errorMessage</h3>
        </div>
        <div class="panel-body">
          <p>$errorStackTrace</p>
        </div>
      </div>
      <div id="tabs">
        <div class="tab-content">
          <div class="tab-pane active" id="eg">
            <div id="eg-detailsBox" class="col-md-5 detailsBox">
              <div id="eg-details" >
                <div class="alert alert-info alert-dismissible" role="alert">
                  <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                  <p>Select a node or an edge from the graph for more details...</p>
                </div>
              </div>
              <div id="eg-nodeDetails">
                <div class="panel panel-default">
                  <div class="panel-heading panel-toggle" data-toggle="collapse" data-target="#eg-nodeDetails-collapse">
                    <h4 class="panel-title">Node</h4>
                  </div>
                  <div id="eg-nodeDetails-collapse" class="panel-collapse collapse in">
                    <div class="panel-body">
                      <div id="nodeDetails-content"></div>
                      <hr>
                      <h3>Program point: <span id="ppKey"></span></h3>
                      <a href="#" id="same-pp-btn" class="btn btn-primary" role="button">Nodes at same PP</a>
                    </div>
                  </div>
                </div>
              </div>
              <div id="eg-edgeDetails">
                <div class="panel panel-default">
                  <div class="panel-heading panel-toggle" data-toggle="collapse" data-target="#eg-edgeDetails-collapse">
                    <h4 class="panel-title">Edge</h4>
                  </div>
                  <div id="eg-edgeDetails-collapse" class="panel-collapse collapse in">
                    <div class="panel-body">
                      <div id="edgeDetails-content"></div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
            <div id="eg-container" class="dotGraph"></div>
          </div>
          <div class="tab-pane" id="cfg">
            <div id="cfg-container" class="dotGraph"></div>
          </div>
          <div class="tab-pane" id="ast">
            <div id="ast-detailBox" class="col-md-2 detailsBox">
              <div class="panel panel-default">
                 <div class="panel-heading panel-toggle" data-toggle="collapse" data-target="#ast-control-collapse">
                   <h4 class="panel-title">Hierarchical Layout</h4>
                 </div>
                 <div id="ast-control-collapse" class="panel-collapse collapse in">
                   <div class="panel-body">
                     <div id="ast-hierarchical-layout">
                       <div class="btn-group btn-group-justified" data-toggle="buttons">
                         <label class="btn btn-primary active"><input type="radio" id="ast-hierarchicalON" name="ast-hierarchical" autocomplete="off" checked>ON</label>
                         <label class="btn btn-default"><input type="radio" id="ast-hierarchicalOFF" name="ast-hierarchical" autocomplete="off">OFF</label>
                       </div>
                     </div>
                   </div>
                 </div>
               </div>
            </div>
            <div id="ast-container" class="dotGraph"></div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    var javaEditor = CodeMirror.fromTextArea(document.getElementById("java-code"), {
      lineNumbers: true,
      matchBrackets: true,
      styleActiveLine: true,
      mode: "text/x-java"
    });
    var cfgEditor = CodeMirror.fromTextArea(document.getElementById("cfg-code"), {
      lineNumbers: true,
      matchBrackets: true,
      styleActiveLine: true,
      readOnly: true,
      mode: "text/x-java"
    });

    var errorMessage = '$errorMessage';

    if (errorMessage) {
      cfgEditor.setValue("");
      var tabs = document.getElementById('tabs');
      tabs.parentNode.removeChild(tabs);
    } else {
      var explodedGraphContainer = document.getElementById('eg-container');
      var dotEG = '$dotEG';
      var detailsPanels = {
         info: $('#eg-details'),
         node: $('#eg-nodeDetails'),
         edge: $('#eg-edgeDetails')
      };
      var networkEG = loadDot(dotEG, explodedGraphContainer, false, detailsPanels);
      networkEG['eg']['ppMapCFG'] = mapPPByLine(cfgEditor.getValue());
      networkEG['eg']['cfgEditor'] = cfgEditor;
      networkEG['eg']['cfgEditorSelectedLine'] = 0;

      cfgEditor.on('cursorActivity', function(editor) {
        handleNewPP(editor, networkEG);
      });

      var cfgContainer = document.getElementById('cfg-container');
      var dotCFG = '$dotCFG';
      var networkCFG = loadDot(dotCFG, cfgContainer, false);

      var astContainer = document.getElementById('ast-container');
      var dotAST = '$dotAST';
      var networkAST = loadDot(dotAST, astContainer, true);

      var errorBox = document.getElementById('errorBox');
      errorBox.parentNode.removeChild(errorBox);

      $('a[data-toggle="tab"]').on('click', function (e) {
        var network = null;
        switch(this.hash) {
          case '#eg':
            network = networkEG;
            break;
          case '#cfg':
            network = networkCFG;
            break;
          case '#ast':
            network = networkAST;
            break;
        }
        if (network) {
          setTimeout(function() { network.fit(); }, 10);
        }
      });

      $('#ast-hierarchical-layout :input').change(function() {
        var onBtn = $('#ast-hierarchicalON');
        var offBtn = $('#ast-hierarchicalOFF');
        var offSelected = (this == offBtn[0]);

        var newOffBtnStatus = offSelected ? 'btn-primary' : 'btn-default';
        var newOnBtnStatus = offSelected ? 'btn-default' : 'btn-primary';

        offBtn.parent('label').addClass(newOffBtnStatus);
        offBtn.parent('label').removeClass(newOnBtnStatus);
        onBtn.parent('label').addClass(newOnBtnStatus);
        onBtn.parent('label').removeClass(newOffBtnStatus);

        changeLayout(networkAST, !offSelected)
      });
    }
  </script>
</body>
</html>
