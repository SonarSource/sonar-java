rule.squid.ArchitecturalConstraint.name=Architectural constraint
rule.squid.ArchitecturalConstraint.param.fromClasses=Optional. If this property is not defined, all classes should adhere to this constraint. Ex : **.web.**
rule.squid.ArchitecturalConstraint.param.toClasses=Mandatory. Ex : java.util.Vector, java.util.Hashtable, java.util.Enumeration

rule.squid.CallToDeprecatedMethod.name=Avoid use of deprecated method

rule.squid.ClassCyclomaticComplexity.name=Avoid too complex class
rule.squid.ClassCyclomaticComplexity.param.max=Maximum complexity allowed.

rule.squid.EmptyFile.name=Empty file

rule.squid.MaximumInheritanceDepth.name=Avoid too deep inheritance tree
rule.squid.MaximumInheritanceDepth.param.max=Maximum depth of the inheritance tree.

rule.squid.MethodCyclomaticComplexity.name=Methods should not be too complex
rule.squid.MethodCyclomaticComplexity.param.max=Maximum complexity allowed.

rule.squid.NoSonar.name=Avoid use of //NOSONAR marker

rule.squid.UndocumentedApi.name=Public types, methods and fields (API) should be documented with Javadoc
rule.squid.UndocumentedApi.param.forClasses=Pattern of classes which should adhere to this constraint. Ex : **.api.**

rule.squid.UnusedPrivateMethod.name=Unused private method

rule.squid.UnusedProtectedMethod.name=Unused protected method

rule.squid.CommentedOutCodeLine.name=Avoid commented-out lines of code

rule.squid.CycleBetweenPackages.name=Avoid cycle between java packages

rule.squid.ParsingError.name=Java parser failure

rule.squid.CallToFileDeleteOnExitMethod.name=Do not use File#deleteOnExit()

rule.squid.S00100.name=Method names should comply with a naming convention
rule.squid.S00100.param.format=Regular expression used to check the function names against.

rule.squid.S00101.name=Class names should comply with a naming convention
rule.squid.S00101.param.format=Regular expression used to check the class names against.

rule.squid.S00103.name=Lines of code should not be too long
rule.squid.S00103.param.maximumLineLength=The maximum authorized line length.

rule.squid.S00104.name=Files should not have too many lines
rule.squid.S00104.param.maximumFileLocThreshold=Maximum authorized lines in a file

rule.squid.S00105.name=Tabulation characters should not be used

rule.squid.S00107.name=Methods should not have too many parameters
rule.squid.S00107.param.maximumMethodParameters=The maximum authorized number of parameters.

rule.squid.S00108.name=Nested blocks of code should not be left empty

rule.squid.S00112.name=Generic exceptions Error, RuntimeException, Throwable and Exception should never be thrown

rule.squid.S00113.name=Files should contain an empty new line at the end

rule.squid.S00114.name=Interface names should comply with a naming convention
rule.squid.S00114.param.format=Regular expression used to check the interface names against.

rule.squid.S00115.name=Constant names should comply with a naming convention
rule.squid.S00115.param.format=Regular expression used to check the constant names against.

rule.squid.S00116.name=Field names should comply with a naming convention
rule.squid.S00116.param.format=Regular expression used to check the field names against.

rule.squid.S00117.name=Local variable and method parameter names should comply with a naming convention
rule.squid.S00117.param.format=Regular expression used to check the names against.

rule.squid.S00118.name=Abstract class names should comply with a naming convention
rule.squid.S00118.param.format=Regular expression used to check the abstract class names against.

rule.squid.S00119.name=Type parameter names should comply with a naming convention
rule.squid.S00119.param.format=Regular expression used to check the type parameter names against.

rule.squid.S00120.name=Package names should comply with a naming convention
rule.squid.S00120.param.format=Regular expression used to check the package names against.

rule.squid.S00121.name=if/else/for/while/do statements should always use curly braces

rule.squid.S00122.name=Statements should be on separate lines

rule.squid.LeftCurlyBraceStartLineCheck.name=Left curly braces should be located at the beginning of lines of code
rule.squid.RightCurlyBraceSameLineAsNextBlockCheck.name=Right curly brace and next "else", "catch" and "finally" keywords should be located on the same line
rule.squid.RightCurlyBraceStartLineCheck.name=Right curly braces should be located at the beginning of lines of code
rule.squid.RightCurlyBraceDifferentLineAsNextBlockCheck.name=Right curly brace and next "else", "catch" and "finally" keywords should be located on two different lines
rule.squid.LeftCurlyBraceEndLineCheck.name=Left curly braces should be located at the end of lines of code
rule.squid.UselessParenthesesCheck.name=Useless parentheses around expressions should be removed to prevent any misunderstanding
rule.squid.ObjectFinalizeCheck.name=The Object.finalize() method should never be called
rule.squid.ObjectFinalizeOverridenCheck.name=The Object.finalize() method should never be overriden
rule.squid.ObjectFinalizeOverridenCallsSuperFinalizeCheck.name=super.finalize() should be called at the end of Object.finalize() implementations
rule.squid.ClassVariableVisibilityCheck.name=Class variable fields should not have public accessibility
rule.squid.ForLoopCounterChangedCheck.name=Loop counters should not be assigned to from within the loop body
rule.squid.LabelsShouldNotBeUsedCheck.name=Labels should not be used
rule.squid.SwitchLastCaseIsDefaultCheck.name=Switch statements should end with a default case
rule.squid.EmptyStatementUsageCheck.name=Empty statements should be removed
rule.squid.ModifiersOrderCheck.name=Modifiers should be declared in the correct order
rule.squid.AssignmentInSubExpressionCheck.name=Assignments should not be made from within sub-expressions
rule.squid.StringEqualityComparisonCheck.name=Strings should be compared using equals()
rule.squid.TrailingCommentCheck.name=Comments should not be located at the end of lines of code
rule.squid.TrailingCommentCheck.param.legalCommentPattern=Pattern for text of trailing comments that are allowed.
rule.squid.UselessImportCheck.name=Useless imports should be removed
rule.squid.LowerCaseLongSuffixCheck.name=Long suffix "L" should be upper case
rule.squid.RedundantThrowsDeclarationCheck.name=Throws declarations should not be redundant
rule.squid.HiddenFieldCheck.name=Local variables should not shadow class fields
rule.squid.MissingDeprecatedCheck.name=Deprecated elements should have both the annotation and the Javadoc tag
rule.squid.IndentationCheck.name=Source code should be correctly indented
rule.squid.IndentationCheck.param.indentationLevel=Number of spaces of an indentation level

rule.squid.S1133.name=Deprecated code should be removed eventually
rule.squid.S1134.name=FIXME tags should be handled
rule.squid.S1135.name=TODO tags should be handled
rule.squid.S1118.name=Utility classes should not have a public constructor
rule.squid.S1132.name=Strings literals should be placed on the left side when checking for equality
rule.squid.S1126.name=Return of boolean expressions should not be wrapped into an if-then-else statement
rule.squid.S1125.name=Literal boolean values should not be used in condition expressions
rule.squid.S1067.name=Expressions should not be too complex
rule.squid.S1067.param.max=Maximum number of allowed conditional operators in an expression
rule.squid.S1141.name=Try-catch blocks should not be nested
rule.squid.S1147.name=System.exit(...) and Runtime.getRuntime().exit(...) should not be called
rule.squid.S1143.name=Return statements should not occur in finally blocks
rule.squid.S1145.name=If statement conditions should not always evaluate to "true" or to "false"
rule.squid.S1157.name=Case insensitive string comparisons should be made without intermediate upper or lower casing
rule.squid.S1142.name=Methods should not contain too many return statements
rule.squid.S1142.param.max=Maximum allowed return statements per method
rule.squid.S1155.name=Collection.isEmpty() should be used to test for emptiness
rule.squid.S1149.name=Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used
rule.squid.S1171.name=Non-static class initializers should not be used
rule.squid.S1160.name=Public methods should throw at most one checked exception
rule.squid.S1168.name=Empty arrays and collections should be returned instead of null
rule.squid.S1170.name=Constants should be declared "final static" rather than merely "final"
rule.squid.S1163.name=Exceptions should not be thrown in finally blocks
rule.squid.S106.name=System.out and System.err should not be used as loggers
rule.squid.S1165.name=Exception classes should be immutable
rule.squid.S1066.name=Collapsible "if" statements should be merged
rule.squid.S134.name=Control flow statements "if", "for", "while", "switch" and "try" should not be nested too deeply
rule.squid.S134.param.max=Maximum allowed if/for/while/switch/try statements nesting depth
rule.squid.S1181.name=Throwable and Error classes should not be caught
rule.squid.S1150.name=Enumeration should not be implemented
rule.squid.S1182.name=super.clone() should be called when overriding Object.clone()
rule.squid.S1151.name=Switch cases should not have too many lines
rule.squid.S1151.param.max=Maximum allowed lines in a switch case
rule.squid.S128.name=Switch cases should end with an unconditional break statement
rule.squid.S1166.name=Exception handlers should preserve the original exception
rule.squid.S1166.param.exceptions=List of exceptions which should not be checked
rule.squid.S138.name=Methods should not have too many lines
rule.squid.S138.param.max=Maximum authorized lines in a method
rule.squid.S1190.name="enum" should no longer be used as a name
rule.squid.S1188.name=Lambdas and anonymous classes should not have too many lines
rule.squid.S1188.param.max=Maximum allowed lines in an anonymous class
rule.squid.S1191.name=Classes from "com.sun.*" and "sun.*" packages should not be used
rule.squid.S1191.param.exclude=Comma separated list of Sun packages to be ignored by this rule. Example: com.sun.jna,sun.misc
rule.squid.S135.name=Loops should not contain more than a single "break" or "continue" statement
rule.squid.S1186.name=Methods should not be empty
rule.squid.S1185.name=Overriding methods should do more than simply call the same method in the super class
rule.squid.S1174.name=Object.finalize() should remain protected (versus public) when overriding
rule.squid.S1175.name=Object.finalize() should not be overloaded (by adding method parameters)
rule.squid.S1153.name=String.valueOf() should not be appended to a String
rule.squid.S1148.name=Throwable.printStackTrace(...) should never be called
rule.squid.S1195.name=Array designators "[]" should be located after the type in method signatures
rule.squid.S1194.name="java.lang.Error" should not be extended
rule.squid.S1193.name=Exception types should not be tested using "instanceof" in catch blocks
rule.squid.S1192.name=String literals should not be duplicated
rule.squid.S1192.param.threshold=Number of times a literal must be duplicated to trigger an issue
rule.squid.S1158.name=Primitive wrappers should not be instantiated only to perform a to String conversion
rule.squid.S1215.name=Execution of the Garbage Collector should be triggered only by the JVM
rule.squid.S1197.name=Array designators "[]" should be on the type, not the variable
rule.squid.S1220.name=The default unnamed package should not be used
rule.squid.S1221.name=Methods should not be named "hashcode"
rule.squid.S1199.name=Nested code blocks should not be used
rule.squid.S1214.name=Constants should not be defined in interfaces
rule.squid.S1201.name=Methods named "equals" should override Object.equals(Object)
rule.squid.S1210.name="equals(Object obj)" should be overridden along with the "compareTo(T obj)" method
rule.squid.S1206.name="equals(Object obj)" and "hashCode()" should be overridden in pairs
rule.squid.S1219.name=\"switch\" statements should not contain non-case labels
rule.squid.S1217.name=Thread.run() and Runnable.run() should not be called directly
rule.squid.S1301.name="switch" statements should have at least 3 cases
rule.squid.S1200.name=Classes should not be coupled to too many other classes (Single Responsibility Principle)
rule.squid.S1200.param.max=Maximum number of classes a single class is allowed to depend upon
rule.squid.S1314.name=Octal values should not be used
rule.squid.S1310.name=NOPMD suppression comment filters should not be used
rule.squid.S1315.name=CHECKSTYLE:OFF suppression comment filters should not be used
rule.squid.S1226.name=Method parameters, caught exceptions and foreach variables should not be reassigned
rule.squid.S1313.name=IP addresses should not be hardcoded
rule.squid.S1312.name=Loggers should be "private static final" and should share a naming convention
rule.squid.S1312.param.format=Regular expression used to check the logger names against.
rule.squid.S1318.name="object == null" should be used instead of "object.equals(null)"
rule.squid.S1223.name=Non-constructor methods should not have the same name as the enclosing class
rule.squid.S1319.name=Declarations should use Java collection interfaces such as "List" rather than specific implementation classes such as "LinkedList"
rule.squid.S1213.name=The members of an interface declaration or class should appear in a pre-defined order
rule.squid.S1444.name="public static" fields should always be constant
rule.squid.S1452.name=Generic wildcard types should not be used in return parameters
rule.squid.S1481.name=Unused local variables should be removed
rule.squid.S1068.name=Unused private fields should be removed
rule.squid.S1317.name=StringBuilder and StringBuffer should not be instantiated with a character
rule.squid.S1451.name=Copyright and license headers should be defined in all source files
rule.squid.S1451.param.headerFormat=Expected copyright and license header (plain text)
rule.squid.S881.name=Increment (++) and decrement (--) operators should not be mixed with other operators in an expression
rule.squid.S1596.name=Collections.emptyList(),emptyMap() and emptySet() should be used instead of Collections.EMPTY_LIST, EMPTY_MAP and EMPTY_SET
rule.squid.S1488.name=Variables should not be declared and then immediately returned or thrown
rule.squid.S1602.name=Lamdbas containing only one statement should not nest this statement in a block
rule.squid.S1611.name=Parentheses should be removed from a single lambda input parameter when its type is inferred
rule.squid.S1604.name=Anonymous inner classes containing only one method should become lambdas
rule.squid.S1610.name=Abstract classes without fields should be converted to interfaces
rule.squid.S1609.name=@FunctionalInterface annotation should be used to flag Single Abstract Method interfaces
rule.squid.S1696.name="NullPointerException" should not be caught
rule.squid.S1700.name=A field should not duplicate the name of its containing class
rule.squid.S1694.name=An abstract class should have both abstract and concrete methods
rule.squid.S1172.name=Unused method parameters should be removed
rule.squid.S1701.name=Fields should not duplicate method names
rule.squid.S109.name=Magic numbers should not be used
rule.squid.S1643.name=Strings should not be concatenated using '+' in a loop
rule.squid.S1698.name=Objects should be compared with "equals()"
rule.squid.S1294.name=The Array.equals(Object obj) method should never be used
rule.squid.S1710.name=Annotation repetitions should not be wrapped
rule.squid.S1695.name="NullPointerException" should not be explicitly thrown
rule.squid.S1697.name=Short-circuit logic should be used to prevent null pointer dereferences in conditionals
rule.squid.S1862.name=Conditions in related "if/else if" statements should not be duplicated
rule.squid.S1656.name=Variables should not be self-assigned
rule.squid.S1598.name=Package declaration should match source file directory
rule.squid.S1612.name=Replace lambdas with method references when possible
rule.squid.S1873.name="static final" arrays should be "private"
rule.squid.S2039.name=Member variable visibility should be specified
rule.squid.S1948.name=Fields in a "Serializable" class should either be transient or serializable
rule.squid.S1228.name=Packages should have a javadoc file 'package-info.java'
rule.squid.S1479.name="switch" statements should not have too many "case" clauses
rule.squid.S1479.param.maximum=Maximum number of case
rule.squid.S1871.name=Two cases in the same "switch" should not have exactly the same implementation
rule.squid.S1764.name=Identical expressions should not be used on both sides of a binary operator
rule.squid.S1244.name=Floating point numbers should not be tested for equality
rule.squid.S2077.name=Values passed to SQL commands should be sanitized
rule.squid.S1774.name=The ternary operator should not be used
rule.squid.S1161.name="@Override" annotation should be used on any method overriding (since Java 5) or implementing (since Java 6) another one
rule.squid.S1994.name="for" loop incrementers should modify the variable being tested in the loop's stop condition
rule.squid.S2094.name=Classes should not be empty
rule.squid.S1850.name="instanceof" operators that always return "true" should be removed
rule.squid.S1905.name=Redundant casts should not be used
rule.squid.S1724.name=Deprecated classes and interfaces should not be extended/implemented
rule.squid.S2114.name=Collections should not be passed as arguments to their own methods
rule.squid.S1065.name=Unused labels should be removed
rule.squid.S1162.name=Checked Exception should not be thrown
rule.squid.S2184.name=Math operands should be cast before assignment
rule.squid.S2201.name=Return values should not be ignored when function calls don't have any side effects
rule.squid.S2225.name="toString" should not return null
rule.squid.S2230.name=Non-public methods should not be "@Transactional"
rule.squid.S2200.name="compareTo" results should not be checked for specific values
rule.squid.S2092.name=Cookies should be "secure"
rule.squid.S1848.name=Objects should not be created to be dropped immediately without being used
rule.squid.S2235.name=IllegalMonitorStateException should never be caught
rule.squid.S888.name=Relational operators should be used in "for" loop termination conditions
rule.squid.S2089.name=HTTP referers should not be relied on
rule.squid.S2068.name=Credentials should not be hard-coded
rule.squid.S2245.name=Pseudorandom number generators (PRNGs) should not be used in secure context
rule.squid.S2096.name="main" should not "throw" anything
rule.squid.S2232.name="ResultSet.isLast()" should not be used
rule.squid.S1849.name="Iterator.hasNext()" should not call "Iterator.next()"
rule.squid.S2236.name=Methods "wait(...)", "notify()" or "notifyAll()" should never be called on Thread instances
rule.squid.S1844.name="Object.wait(...)" should never be called on objects that implement "java.util.concurrent.locks.Condition"
rule.squid.S2251.name=A "for" loop update clause should move the counter in the right direction
rule.squid.S2252.name=Loop conditions should be true at least once
rule.squid.S2253.name=Disallowed methods should not be used
rule.squid.S2253.param.className=Name of the class whose method is forbidden
rule.squid.S2253.param.methodName=Name of the forbidden method
rule.squid.S2253.param.argumentTypes=Comma-delimited list of argument types, E.G. java.lang.String, int[], int
rule.squid.S2070.name=SHA-1 and MD5 hash algorithms should not be used
rule.squid.S2258.name="javax.crypto.NullCipher" should not be used for anything other than testing
rule.squid.S2254.name="HttpServletRequest.getRequestedSessionId()" should only be used by servlet containers
rule.squid.S2250.name="ConcurrentLinkedQueue.size()" should not be used
rule.squid.S2226.name=Servlets should never have mutable instance fields
rule.squid.S2111.name="BigDecimal(double)" should not be used
rule.squid.S2109.name=Reflection should not be used to check non-runtime annotations
rule.squid.S2273.name="wait(...)", "notify()" and "notifyAll()" methods should only be called when a lock is obviously held on an object
rule.squid.S2276.name="wait(...)" should be used instead of "Thread.sleep(...)" when a lock is held
rule.squid.S2274.name="Object.wait(...)" and "Condition.await(...)" should always be called inside a "while" loop
rule.squid.S2272.name="Iterator.next()" methods should throw "NoSuchElementException"
rule.squid.S2277.name=Cryptographic RSA algorithms should always incorporate OAEP (Optimal Asymmetric Encryption Padding)
rule.squid.S2278.name=DES (Data Encryption Standard) and DESede (3DES) should not be used
rule.squid.S1699.name=Constructors should only call non-overridable methods
rule.squid.S2204.name=".equals()" should not be used to test the values of "Atomic" classes
rule.squid.S2078.name=Values passed to LDAP queries should be sanitized
rule.squid.S2178.name=Short-circuit logic should be used in boolean contexts
rule.squid.S2076.name=Values passed to OS commands should be sanitized
rule.squid.S2116.name="hashCode" and "toString" should not be called on array instances
rule.squid.S1943.name=Classes and methods that rely on the default system encoding should not be used
rule.squid.S2157.name="Cloneables" should implement "clone"
rule.squid.S2275.name=Printf-style format strings should not lead to any runtime unexpected behavior
rule.squid.S2197.name=Modulus results should not be checked for direct equality
rule.squid.S2151.name="runFinalizersOnExit" should not be called
rule.squid.S2127.name="Double.longBitsToDouble" should not be used for "int"
rule.squid.S1860.name=Synchronisation should not be based on Strings or boxed primitives
rule.squid.S2055.name=The non-serializable super class of a "Serializable" class must have a no-argument constructor
rule.squid.S2118.name=Non-serializable classes should not be written
rule.squid.S2066.name="Serializable" inner classes of non-serializable classes should be "static"
rule.squid.S2059.name="Serializable" inner classes of "Serializable" classes should be static
rule.squid.S2057.name="Serializable" classes should have a version id
rule.squid.S2063.name=Comparators should be "Serializable"
rule.squid.S2065.name=Fields in non-serializable classes should not be "transient"
rule.squid.S2061.name=Custom serialization method signatures should meet requirements
rule.squid.S2176.name=Class names should not shadow interfaces or superclasses
rule.squid.S2333.name=Redundant modifiers should not be used
rule.squid.S2164.name=Math should not be performed on floats
rule.squid.S2130.name=Parsing should be used to convert "Strings" to primitives
rule.squid.S2166.name=Classes named like "Exception" should extend "Exception" or a subclass
rule.squid.S2156.name="final" classes should not have "protected" members
rule.squid.S1309.name=The @SuppressWarnings annotation should not be used
rule.squid.S1309.param.listOfWarnings=Comma separated list of warnings that can't be suppressed. Example: 'unchecked, cast, all, boxing'. An empty list means that no warning can be suppressed.
rule.squid.S2153.name=Boxing and unboxing should not be immediately reversed
rule.squid.S2257.name=Only standard cryptographic algorithms should be used
