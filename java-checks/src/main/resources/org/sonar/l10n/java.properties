rule.squid.ArchitecturalConstraint.param.fromClasses=Optional. If this property is not defined, all classes should adhere to this constraint. Ex : **.web.**
rule.squid.ArchitecturalConstraint.param.toClasses=Mandatory. Ex : java.util.Vector, java.util.Hashtable, java.util.Enumeration

rule.squid.ClassCyclomaticComplexity.param.max=Maximum complexity allowed.

rule.squid.MaximumInheritanceDepth.param.max=Maximum depth of the inheritance tree.

rule.squid.MethodCyclomaticComplexity.param.max=Maximum complexity allowed.

rule.squid.UndocumentedApi.param.forClasses=Pattern of classes which should adhere to this constraint. Ex : **.api.**

rule.squid.S00100.param.format=Regular expression used to check the function names against.

rule.squid.S00101.param.format=Regular expression used to check the class names against.

rule.squid.S00103.param.maximumLineLength=The maximum authorized line length.

rule.squid.S00104.param.maximumFileLocThreshold=Maximum authorized lines in a file

rule.squid.S00107.param.maximumMethodParameters=The maximum authorized number of parameters.

rule.squid.S00114.param.format=Regular expression used to check the interface names against.

rule.squid.S00115.param.format=Regular expression used to check the constant names against.

rule.squid.S00116.param.format=Regular expression used to check the field names against.

rule.squid.S00117.param.format=Regular expression used to check the names against.

rule.squid.S00118.param.format=Regular expression used to check the abstract class names against.

rule.squid.S00119.param.format=Regular expression used to check the type parameter names against.

rule.squid.S00120.param.format=Regular expression used to check the package names against.


rule.squid.TrailingCommentCheck.param.legalCommentPattern=Pattern for text of trailing comments that are allowed.
rule.squid.IndentationCheck.param.indentationLevel=Number of spaces of an indentation level

rule.squid.S1067.param.max=Maximum number of allowed conditional operators in an expression

rule.squid.S1142.param.max=Maximum allowed return statements per method

rule.squid.S134.param.max=Maximum allowed if/for/while/switch/try statements nesting depth
rule.squid.S1151.param.max=Maximum allowed lines in a switch case
rule.squid.S1166.param.exceptions=List of exceptions which should not be checked
rule.squid.S138.param.max=Maximum authorized lines in a method
rule.squid.S1188.param.max=Maximum allowed lines in an anonymous class
rule.squid.S1191.param.exclude=Comma separated list of Sun packages to be ignored by this rule. Example: com.sun.jna,sun.misc

rule.squid.S1192.param.threshold=Number of times a literal must be duplicated to trigger an issue

rule.squid.S1200.param.max=Maximum number of classes a single class is allowed to depend upon

rule.squid.S1312.param.format=Regular expression used to check the logger names against.

rule.squid.S1451.param.headerFormat=Expected copyright and license header (plain text)

rule.squid.S1479.param.maximum=Maximum number of case

rule.squid.S2253.param.className=Name of the class whose method is forbidden
rule.squid.S2253.param.methodName=Name of the forbidden method
rule.squid.S2253.param.argumentTypes=Comma-delimited list of argument types, E.G. java.lang.String, int[], int

rule.squid.S1309.param.listOfWarnings=Comma separated list of warnings that can't be suppressed. Example: 'unchecked, cast, all, boxing'. An empty list means that no warning can be suppressed.

