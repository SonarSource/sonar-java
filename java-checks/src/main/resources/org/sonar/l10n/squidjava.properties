rule.squid.ArchitecturalConstraint.name=Architectural constraint
rule.squid.ArchitecturalConstraint.param.fromClasses=Optional. If this property is not defined, all classes should adhere to this constraint. Ex : **.web.**
rule.squid.ArchitecturalConstraint.param.toClasses=Mandatory. Ex : java.util.Vector, java.util.Hashtable, java.util.Enumeration

rule.squid.CallToDeprecatedMethod.name=Avoid use of deprecated method

rule.squid.ClassCyclomaticComplexity.name=Avoid too complex class
rule.squid.ClassCyclomaticComplexity.param.max=Maximum complexity allowed.

rule.squid.EmptyFile.name=Empty file

rule.squid.MethodCyclomaticComplexity.name=Methods should not be too complex
rule.squid.MethodCyclomaticComplexity.param.max=Maximum complexity allowed.

rule.squid.NoSonar.name=Avoid use of //NOSONAR marker

rule.squid.UndocumentedApi.name=Public types, methods and fields (API) should be documented with Javadoc
rule.squid.UndocumentedApi.param.forClasses=Pattern of classes which should adhere to this constraint. Ex : **.api.**

rule.squid.UnusedPrivateMethod.name=Unused private method

rule.squid.UnusedProtectedMethod.name=Unused protected method

rule.squid.CommentedOutCodeLine.name=Avoid commented-out lines of code

rule.squid.CycleBetweenPackages.name=Avoid cycle between java packages

rule.squid.ParsingError.name=Java parser failure

rule.squid.CallToFileDeleteOnExitMethod.name=Do not use File#deleteOnExit()

rule.squid.XPath.name=XPath rule
rule.squid.XPath.param.xpathQuery=The XPath query
rule.squid.XPath.param.message=The violation message

rule.squid.S00100.name=Method names should comply with a naming convention
rule.squid.S00100.param.format=Regular expression used to check the function names against.

rule.squid.S00101.name=Class names should comply with a naming convention
rule.squid.S00101.param.format=Regular expression used to check the class names against.

rule.squid.S00103.name=Lines of code should not be too long
rule.squid.S00103.param.maximumLineLength=The maximum authorized line length.

rule.squid.S00104.name=Files should not have too many lines
rule.squid.S00104.param.maximumFileLocThreshold=Maximum authorized lines in a file

rule.squid.S00105.name=Tabulation characters should not be used

rule.squid.S00107.name=Methods should not have too many parameters
rule.squid.S00107.param.maximumMethodParameters=The maximum authorized number of parameters.

rule.squid.S00108.name=Nested blocks of code should not be left empty

rule.squid.S00112.name=Generic exceptions Error, RuntimeException, Throwable and Exception should never be thrown

rule.squid.S00113.name=Files should contain an empty new line at the end

rule.squid.S00114.name=Interface names should comply with a naming convention
rule.squid.S00114.param.format=Regular expression used to check the interface names against.

rule.squid.S00115.name=Constant names should comply with a naming convention
rule.squid.S00115.param.format=Regular expression used to check the constant names against.

rule.squid.S00116.name=Field names should comply with a naming convention
rule.squid.S00116.param.format=Regular expression used to check the field names against.

rule.squid.S00117.name=Local variable and method parameter names should comply with a naming convention
rule.squid.S00117.param.format=Regular expression used to check the names against.

rule.squid.S00118.name=Abstract class names should comply with a naming convention
rule.squid.S00118.param.format=Regular expression used to check the abstract class names against.

rule.squid.S00119.name=Type parameter names should comply with a naming convention
rule.squid.S00119.param.format=Regular expression used to check the type parameter names against.

rule.squid.S00120.name=Package names should comply with a naming convention
rule.squid.S00120.param.format=Regular expression used to check the package names against.

rule.squid.S00121.name=if/else/for/while/do statements should always use curly braces

rule.squid.S00122.name=Statements should be on separate lines

rule.squid.LeftCurlyBraceStartLineCheck.name=Left curly braces should be located at the beginning of lines of code
rule.squid.RightCurlyBraceSameLineAsNextBlockCheck.name=Right curly brace and next "else", "catch" and "finally" keywords should be located on the same line
rule.squid.RightCurlyBraceStartLineCheck.name=Right curly braces should be located at the beginning of lines of code
rule.squid.RightCurlyBraceDifferentLineAsNextBlockCheck.name=Right curly brace and next "else", "catch" and "finally" keywords should be located on two different lines
rule.squid.LeftCurlyBraceEndLineCheck.name=Left curly braces should be located at the end of lines of code
rule.squid.UselessParenthesesCheck.name=Useless parentheses around expressions should be removed to prevent any misunderstanding
rule.squid.ObjectFinalizeCheck.name=The Object.finalize() method should never be called
rule.squid.ObjectFinalizeOverridenCheck.name=The Object.finalize() method should never be overriden
rule.squid.ObjectFinalizeOverridenCallsSuperFinalizeCheck.name=super.finalize() should be called at the end of Object.finalize() implementations
rule.squid.ClassVariableVisibilityCheck.name=Class variable fields should not have public accessibility
rule.squid.ForLoopCounterChangedCheck.name=Loop counters should not be assigned to from within the loop body
rule.squid.LabelsShouldNotBeUsedCheck.name=Labels should not be used
rule.squid.SwitchLastCaseIsDefaultCheck.name=Switch statements should end with a default case
rule.squid.EmptyStatementUsageCheck.name=Empty statements should be removed
rule.squid.ModifiersOrderCheck.name=Modifiers should be declared in the correct order
rule.squid.AssignmentInSubExpressionCheck.name=Assignments should not be made from within sub-expressions
rule.squid.StringEqualityComparisonCheck.name=Strings should be compared using equals()
rule.squid.TrailingCommentCheck.name=Comments should not be located at the end of lines of code
rule.squid.TrailingCommentCheck.param.legalCommentPattern=Pattern for text of trailing comments that are allowed.
rule.squid.UselessImportCheck.name=Useless imports should be removed
rule.squid.LowerCaseLongSuffixCheck.name=Long suffix "L" should be upper case
rule.squid.RedundantThrowsDeclarationCheck.name=Throws declarations should not be redundant
rule.squid.HiddenFieldCheck.name=Local variables should not shadow class fields
rule.squid.MissingDeprecatedCheck.name=Deprecated elements should have both the annotation and the Javadoc tag
rule.squid.IndentationCheck.name=Source code should be correctly indented
rule.squid.IndentationCheck.param.indentationLevel=Number of spaces of an indentation level

rule.squid.S1133.name=Deprecated code should be removed eventually
rule.squid.S1134.name=FIXME tags should be handled
rule.squid.S1135.name=TODO tags should be handled
rule.squid.S1118.name=Utility classes should not have a public constructor
rule.squid.S1132.name=Strings literals should be placed on the left side when checking for equality
rule.squid.S1126.name=Return of boolean expressions should not be wrapped into an if-then-else statement
rule.squid.S1125.name=Literal boolean values should not be used in condition expressions
rule.squid.S1067.name=Expressions should not be too complex
rule.squid.S1067.param.max=Maximum number of allowed conditional operators in an expression
rule.squid.S1141.name=Try-catch blocks should not be nested
rule.squid.S1147.name=System.exit(...) and Runtime.getRuntime().exit(...) should not be called
rule.squid.S1143.name=Return statements should not occur in finally blocks
rule.squid.S1145.name=If statement conditions should not always evaluate to "true" or to "false"
rule.squid.S1157.name=Case insensitive string comparisons should be made without intermediate upper or lower casing
rule.squid.S1142.name=Methods should not contain too many return statements
rule.squid.S1142.param.max=Maximum allowed return statements per method
rule.squid.S1155.name=Collection.isEmpty() should be used to test for emptiness
rule.squid.S1149.name=Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used
rule.squid.S1171.name=Non-static class initializers should not be used
rule.squid.S1160.name=Public methods should throw at most one checked exception
rule.squid.S1168.name=Empty arrays and collections should be returned instead of null
rule.squid.S1170.name=Constants should be declared "final static" rather than merely "final"
rule.squid.S1163.name=Exceptions should not be thrown in finally blocks
rule.squid.S106.name=System.out and System.err should not be used as loggers
rule.squid.S1165.name=Exception classes should be immutable
rule.squid.S1066.name=Collapsible "if" statements should be merged
rule.squid.S134.name=Control flow statements "if", "for", "while", "switch" and "try" should not be nested too deeply
rule.squid.S134.param.max=Maximum allowed if/for/while/switch/try statements nesting depth
rule.squid.S1181.name=Throwable and Error classes should not be caught
rule.squid.S1150.name=Enumeration should not be implemented
rule.squid.S1182.name=super.clone() should be called when overriding Object.clone()
rule.squid.S1151.name=Switch cases should not have too many lines
rule.squid.S1151.param.max=Maximum allowed lines in a switch case
rule.squid.S128.name=Switch cases should end with an unconditional break statement
rule.squid.S1166.name=Exception handlers should provide some context and preserve the original exception
rule.squid.S138.name=Methods should not have too many lines
rule.squid.S138.param.max=Maximum authorized lines in a method
rule.squid.S1190.name="enum" should no longer be used as a name
rule.squid.S1188.name=Anonymous classes should not have too many lines
rule.squid.S1188.param.max=Maximum allowed lines in an anonymous class
rule.squid.S1191.name=Classes from "com.sun.*" and "sun.*" packages should not be used
rule.squid.S1191.param.exclude=Exclude packages (; separated list) from this rule
rule.squid.S135.name=Loops should not contain more than a single "break" or "continue" statement
rule.squid.S1186.name=Methods should not be empty
rule.squid.S1185.name=Overriding methods should do more than simply call the same method in the super class
rule.squid.S1174.name=Object.finalize() should remain protected (versus public) when overriding
rule.squid.S1175.name=Object.finalize() should not be overloaded (by adding method parameters)
rule.squid.S1153.name=String.valueOf() should not be appended to a String
rule.squid.S1148.name=Throwable.printStackTrace(...) should never be called
rule.squid.S1195.name=Array designators "[]" should be located after the type in method signatures
rule.squid.S1194.name="java.lang.Error" should not be extended
rule.squid.S1193.name=Exception types should not be tested using "instanceof" in catch blocks
rule.squid.S1192.name=String literals should not be duplicated
rule.squid.S1158.name=Primitive wrappers should not be instantiated only to perform a to String conversion
rule.squid.S1215.name=Execution of the Garbage Collector should be triggered only by the JVM
rule.squid.S1197.name=Array designators "[]" should be on the type, not the variable
rule.squid.S1220.name=The default unnamed package should not be used
rule.squid.S1221.name=Methods should not be named "hashcode"
rule.squid.S1199.name=Nested code blocks should not be used
rule.squid.S1214.name=Constants should not be defined in interfaces
rule.squid.S1201.name=Methods named "equals" should override Object.equals(Object)
rule.squid.S1210.name="equals(Object obj)" should be overridden along with the "compareTo(T obj)" method
rule.squid.S1206.name="equals(Object obj)" and "hashCode()" should be overridden in pairs
rule.squid.S1219.name=\"switch\" statements should not contain non-case labels
rule.squid.S1217.name=Thread.run() and Runnable.run() should not be called directly
rule.squid.S1301.name="switch" statements should have at least 3 cases
rule.squid.S1200.name=Classes should not be coupled to too many other classes (Single Responsibility Principle)
rule.squid.S1200.param.max=Maximum number of classes a single class is allowed to depend upon
rule.squid.S1314.name=Octal values should not be used
rule.squid.S1310.name=NOPMD suppression comment filters should not be used
rule.squid.S1315.name=CHECKSTYLE:OFF suppression comment filters should not be used
rule.squid.S1226.name=Method parameters, caught exceptions and foreach variables should not be reassigned
rule.squid.S1313.name=IP addresses should not be hardcoded
rule.squid.S1312.name=Loggers should be "private static final" and should share a naming convention
rule.squid.S1312.param.format=Regular expression used to check the logger names against.
rule.squid.S1318.name="object == null" should be used instead of "object.equals(null)"
rule.squid.S1223.name=Non-constructor methods should not have the same name as the enclosing class
rule.squid.S1319.name=Declarations should use Java collection interfaces such as "List" rather than specific implementation classes such as "LinkedList"
rule.squid.S1231.name=The members of an interface declaration or class should appear in a pre-defined order
rule.squid.S1444.name="public static" fields should always be constant
rule.squid.S1452.name=Generic wildcard types should not be used in return parameters
rule.squid.S1481.name=Unused local variables should be removed
rule.squid.S1068.name=Unused private fields should be removed
rule.squid.S1317.name=StringBuilder and StringBuffer should not be instantiated with a character
rule.squid.S1451.name=Copyright and license headers should be defined in all source files
rule.squid.S1451.param.headerFormat=Expected copyright and license header (plain text)
rule.squid.S881.name=Increment (++) and decrement (--) operators should not be mixed with other operators in an expression
rule.squid.S1596.name=Collections.emptyList()/emptyMap() or emptySet() should be used instead of Collections.EMPTY_LIST, EMPTY_MAP or EMPTY_SET
