package checks;

import java.util.Locale;

public class RedundantConstructorsAndMethodsShouldBeAvoidedCheck {
  record RedundantConstructor(String name, int age) {
    RedundantConstructor(String name, int age) { // Noncompliant, already autogenerated
      this.name = name;
      this.age = age;
    }
  }

  record EmptyConstructorAndRedundantGetter(String name, int age) {
    EmptyConstructorAndRedundantGetter { // Noncompliant, no need for empty compact constructor
    }
    public String name() { // Noncompliant, already autogenerated
      return name;
    }
  }

  record Compliant(String name, int age) { } // Compliant

  record CompliantConstructorWithAddedValue(String name, int age) {
    CompliantConstructorWithAddedValue(String name, int age) { // Compliant
      this.name = name.toLowerCase(Locale.ROOT);
      this.age = age;
    }
  }

  record CompliantConstructorComplementAndTransformativeGetter(String name, int age) {
    CompliantConstructorComplementAndTransformativeGetter { // Compliant
      if (age < 0) {
        throw new IllegalArgumentException("Negative age");
      }
    }
    public String name() { // Compliant
      return name.toUpperCase(Locale.ROOT);
    }
  }
}
